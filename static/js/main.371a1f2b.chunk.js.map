{"version":3,"sources":["components/Data.js","components/Resume.js","components/About.js","App.js","serviceWorker.js","index.js","components/Resume.module.css"],"names":["Data","briefIntro","education","name","data","title","location","time","experience","company","description","Resume","renderEducation","item","react_default","a","createElement","className","styles","itemContainer","itemTitle","map","itemContent","renderExperience","exp","body","paperWrapper","topContainer","fullname","href","link","bottomContainer","blockLeft","this","blockRight","Component","About","Home","App","BrowserRouter","Link","to","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.371a1f2b.chunk.js","sourcesContent":["const Data = {\n  briefIntro: 'Love abstract aspects in Computer Science, desire and have willingness to learn.',\n  education: {\n    name: 'Education',\n    data: [\n      {\n        title: 'Major in Informatics',\n        location: 'VNU-HCM, High School for the Gifted',\n        time: '2013 - 2016',\n      },\n      {\n        title: 'Bachelor in Computer Science',\n        location: 'VNU-HCM, University of Science',\n        time: '2016 - Ongoing',\n      },\n    ]\n  },\n  experience: {\n    name: 'Experience',\n    data: [\n      {\n        company: 'Teko Vietnam',\n        title: 'Front-end Developer Intern',\n        time: 'September 2019 - now',\n        description: '',\n      }\n    ],\n  }\n}\n\nexport default Data;","import React, { Component } from 'react';\nimport styles from './Resume.module.css';\nimport Data from './Data'\n\nclass Resume extends Component {\n  renderEducation = item => {\n    return (\n      <div className={styles.itemContainer}>\n        <div className={styles.itemTitle}>{item.name}</div>\n        {\n          item.data.map(item => {\n            return (\n              <div className={styles.itemContent}>\n                <div>{item.title}</div>\n                <div>{item.location}</div>\n                <div>{item.time}</div>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n  renderExperience = exp => {\n    return (\n      <div className={styles.itemContainer}>\n        <div className={styles.itemTitle}>{exp.name}</div>\n        {\n          exp.data.map(item => {\n            return (\n              <div className={styles.itemContent}>\n                <div>{item.title}</div>\n                <div>{item.company} - {item.time}</div>\n                <div>{item.description}</div>\n              </div>\n            );\n          })\n        }\n      </div>\n    )\n  }\n  render() {\n    return (\n      <div className={styles.body}>\n        <div className={styles.paperWrapper}>\n          <div className={styles.topContainer}>\n            <h1 className={styles.fullname}>Duc Le</h1>\n            <a href=\"/\" className={styles.link}>Portfolio</a>\n            <p className={styles.briefIntro}>{Data.briefIntro}</p>\n          </div>\n          <div className={styles.bottomContainer}>\n            <div className={styles.blockLeft}>\n              {this.renderEducation(Data.education)}\n              {this.renderExperience(Data.experience)}\n            </div>\n            <div className={styles.blockRight}>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About me</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Resume from './components/Resume'\nimport About from './components/About'\nimport './index.module.css';\n\n// class App extends Component {\nconst App = () => (\n  <Router>\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/resume\">Résumé</Link>\n        </li>\n      </ul>\n\n      <hr />\n\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/resume\" component={Resume} />\n    </div>\n  </Router>\n);\n  \nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n  </div>\n);\n  \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paperWrapper\":\"Resume_paperWrapper__387mU\",\"topContainer\":\"Resume_topContainer__lNFb-\",\"bottomContainer\":\"Resume_bottomContainer__B_x4h\",\"blockLeft\":\"Resume_blockLeft__37xzG\",\"blockRight\":\"Resume_blockRight__292BY\",\"fullname\":\"Resume_fullname__2qWhF\",\"briefIntro\":\"Resume_briefIntro__1zt4R\",\"link\":\"Resume_link__2vu-B\",\"itemContainer\":\"Resume_itemContainer__3iPgD\",\"itemTitle\":\"Resume_itemTitle__3rCGK\",\"itemContent\":\"Resume_itemContent__1tjt4\"};"],"sourceRoot":""}